








uma única condiçã







goNorth()
{
    lock();
    while(num_baboons_going_south > 0 && num_baboons_going_north >= 5)
    {    
        wait(cond_goNorth);
    num_baboons_going_north++;
    unlock();
}

endNorth()
{
    lock();
    num_baboons_going_north--;
    signal(cond_goNorth);
    if (num_baboons_going_north == 0) 
        signal(cond_goSouth);
    unlock();
};


travessiaNorteSul()
{
    goNorth();
    // crossing routine.
    endNorth();
    pthread_exit();
}




int main
    while (numBabuinosNorte > 0 && numBabuinosSul > 0)
    {
        int sorted = rand();

        if rand % 2 == 0
            pthread_create(travessiaNorteSul)
        else 
            pthread_create(travessiaSulNorte)

    }
